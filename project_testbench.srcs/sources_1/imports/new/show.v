`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2020/09/22 08:38:01
// Design Name: 
// Module Name: show
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module show(
input wire [19:0] x,
input wire clk,
input wire [2:0]State,
input wire [4:0]count,
output reg [6:0] a_to_g,
output reg [7:0] AN,
output reg[15:0] LED
);

reg[2:0] s=3'b000;


reg[4:0] digit;
reg[39:0] data=40'h0000000000;
reg [19:0] clkdiv;
reg [31:0]timer=32'h0000_0000;
reg [255:0]LED_state;
reg [4:0]a=5'b10001;
reg [4:0]b=5'b10010;
reg [4:0]c=5'b00101;
//    initial
//    begin
//    an=8'b11111111;
//    end

initial
LED=0;
always @ (posedge clk)
begin
case(State)
3'b000:data=40'b01010_01010_01010_01010_01010_01010_01010_01010;
3'b001:begin
data={a[4:0],b[4:0],c[4:0],count[4:0]+1,x[19:0]};
data[39:35]=a[4:0];
data[34:30]=b[4:0];
data[29:25]=c[4:0];
end
3'b010:
begin
//    data={5'b01100,5'b01101,5'b01101,5'b01110,x[19:0]};
data[39:35]=5'b10101;
data[34:30]=5'b01100;
data[29:25]=5'b10011;
data[24:20]=5'b10100;
data[19:0]=x[19:0];
end
3'b011:data=40'b10101_01100_10011_10100_01100_00000_10110_10110;
3'b101:data=40'b01000_01000_01000_01000_01000_01000_01000_01000;
3'b110:data=40'b00000_00000_00000_00000_00000_00000_00000_00000;
3'b111:data=40'b01100_01101_01101_01101_01101_01101_01101_01110;
//begin
//data={5'b01100,5'b00000,5'b00000,5'b01110,x[19:0]};
//data[39:35]=5'b01100;
//data[34:30]=5'b00000;
//data[29:25]=5'b00000;
//data[24:20]=5'b01110;    
//end

endcase
end


always @ (*)
case(s)
0:digit=data[4:0];
1:digit=data[9:5];
2:digit=data[14:10];
3:digit=data[19:15];
4:digit=data[24:20];
5:digit=data[29:25];
6:digit=data[34:30];
7:digit=data[39:35];
default:digit=data[4:0];
endcase

always @(*)
case(digit)
0:a_to_g=7'b0000001;
1:a_to_g=7'b1001111;
2:a_to_g=7'b0010010;
3:a_to_g=7'b0000110;
4:a_to_g=7'b1001100;
5:a_to_g=7'b0100100;
6:a_to_g=7'b0100000;
7:a_to_g=7'b0001111;
8:a_to_g=7'b0000000;
9:a_to_g=7'b0000100;
10:a_to_g=7'b1111110;//中间一横
11:a_to_g=7'b1110111;//下面一横
12:a_to_g=7'b0110001;//C
13:a_to_g=7'b0110111;//上下两横
14:a_to_g=7'b0000111;//右方框
15:a_to_g=7'b1110111;//下面一横
16:a_to_g=7'b0001000;//R
17:a_to_g=7'b0011000;//P
18:a_to_g=7'b1110001;//L
19:a_to_g=7'b1001000;//H
20:a_to_g=7'b0100001;//G
21:a_to_g=7'b1111111;//全暗
22:a_to_g=7'b0111001;//R
default:a_to_g=7'b0100100;
endcase


always @ (*)
begin
AN=8'b11111111;
AN[s]=0;
end

always @ (posedge clk)
begin
clkdiv<=clkdiv+1;
end



always@(posedge clk)
begin
s=timer[19:17];
if (timer == 32'd400_000_00)      
    timer <= 32'd0;                     
else
    timer <= timer + 32'd1;             
end


always @ (*)
case(State)
3'b000://等待，流水灯，中间一横
begin
LED_state[15:0] <= 16'b0000_0000_0000_0001;
LED_state[31:16] <= 16'b0000_0000_0000_0010;
LED_state[47:32] <= 16'b0000_0000_0000_0100;
LED_state[63:48] <= 16'b0000_0000_0000_1000;
LED_state[79:64] <= 16'b0000_0000_0001_0000;
LED_state[95:80] <= 16'b0000_0000_0010_0000;
LED_state[111:96] <= 16'b0000_0000_0100_0000;
LED_state[127:112] <= 16'b0000_0000_1000_0000;
LED_state[143:128] <= 16'b0000_0001_0000_0000;
LED_state[159:144] <= 16'b0000_0010_0000_0000;
LED_state[175:160] <= 16'b0000_0100_0000_0000;
LED_state[191:176] <= 16'b0000_1000_0000_0000;
LED_state[207:192] <= 16'b0001_0000_0000_0000;
LED_state[223:208] <= 16'b0010_0000_0000_0000;
LED_state[239:224] <= 16'b0100_0000_0000_0000;
LED_state[255:240] <= 16'b1000_0000_0000_0000;
end
3'b001://输入密码状态，从左到右灯，右边四个下面一横，左边plsn
begin
LED_state[15:0] <= 16'b0000_0000_0000_0001;
LED_state[31:16] <= 16'b0000_0000_0000_0011;
LED_state[47:32] <= 16'b0000_0000_0000_0111;
LED_state[63:48] <= 16'b0000_0000_0000_1111;
LED_state[79:64] <= 16'b0000_0000_0001_1111;
LED_state[95:80] <= 16'b0000_0000_0011_1111;
LED_state[111:96] <= 16'b0000_0000_0111_1111;
LED_state[127:112] <= 16'b0000_0000_1111_1111;
LED_state[143:128] <= 16'b0000_0001_1111_1111;
LED_state[159:144] <= 16'b0000_0011_1111_1111;
LED_state[175:160] <= 16'b0000_0111_1111_1111;
LED_state[191:176] <= 16'b0000_1111_1111_1111;
LED_state[207:192] <= 16'b0001_1111_1111_1111;
LED_state[223:208] <= 16'b0011_1111_1111_1111;
LED_state[239:224] <= 16'b0111_1111_1111_1111;
LED_state[255:240] <= 16'b1111_1111_1111_1111;
end
3'b010://管理员模式，所有灯一闪一闪，左边CHG，右边四个下面一横
begin
LED_state[15:0] <= 16'b0000_0000_0000_0000;
LED_state[31:16] <= 16'b1111_1111_1111_1111;
LED_state[47:32] <= 16'b0000_0000_0000_0100;
LED_state[63:48] <= 16'b1111_1111_1111_1111;
LED_state[79:64] <= 16'b0000_0000_0000_0000;
LED_state[95:80] <= 16'b1111_1111_1111_1111;
LED_state[111:96] <= 16'b0000_0000_0000_0000;
LED_state[127:112] <= 16'b1111_1111_1111_1111;
LED_state[143:128] <= 16'b0000_0000_0000_0000;
LED_state[159:144] <= 16'b1111_1111_1111_1111;
LED_state[175:160] <= 16'b0000_0000_0000_0000;
LED_state[191:176] <= 16'b1111_1111_1111_1111;
LED_state[207:192] <= 16'b0000_0000_0000_0000;
LED_state[223:208] <= 16'b1111_1111_1111_1111;
LED_state[239:224] <= 16'b0000_0000_0000_0000;
LED_state[255:240] <= 16'b1111_1111_1111_1111;
end
3'b011://密码设定完毕，灯从中间到两边，CHG corr
begin
LED_state[15:0] <= 16'b0000_0001_1000_0000;
LED_state[31:16] <= 16'b0000_0010_0100_0000;
LED_state[47:32] <= 16'b0000_0100_0010_0000;
LED_state[63:48] <= 16'b0000_1000_0001_0000;
LED_state[79:64] <= 16'b0001_0000_0000_1000;
LED_state[95:80] <= 16'b0010_0000_0000_0100;
LED_state[111:96] <= 16'b0100_0000_0000_0010;
LED_state[127:112] <= 16'b1000_0000_1000_0001;
LED_state[143:128] <= 16'b0000_0001_1000_0000;
LED_state[159:144] <= 16'b0000_0010_0100_0000;
LED_state[175:160] <= 16'b0000_0100_0010_0000;
LED_state[191:176] <= 16'b0000_1000_0001_0000;
LED_state[207:192] <= 16'b0001_0000_0000_1000;
LED_state[223:208] <= 16'b0010_0000_0000_0100;
LED_state[239:224] <= 16'b0100_0000_0000_0010;
LED_state[255:240] <= 16'b1000_0000_0000_0001;
end
3'b101://报警，所有灯亮，全8
begin
LED_state[15:0] <= 16'b1111_1111_1111_1111;
LED_state[31:16] <= 16'b1111_1111_1111_1111;
LED_state[47:32] <= 16'b1111_1111_1111_1111;
LED_state[63:48] <= 16'b1111_1111_1111_1111;
LED_state[79:64] <= 16'b1111_1111_1111_1111;
LED_state[95:80] <= 16'b1111_1111_1111_1111;
LED_state[111:96] <= 16'b1111_1111_1111_1111;
LED_state[127:112] <= 16'b1111_1111_1111_1111;
LED_state[143:128] <= 16'b1111_1111_1111_1111;
LED_state[159:144] <= 16'b1111_1111_1111_1111;
LED_state[175:160] <= 16'b1111_1111_1111_1111;
LED_state[191:176] <= 16'b1111_1111_1111_1111;
LED_state[207:192] <= 16'b1111_1111_1111_1111;
LED_state[223:208] <= 16'b1111_1111_1111_1111;
LED_state[239:224] <= 16'b1111_1111_1111_1111;
LED_state[255:240] <= 16'b1111_1111_1111_1111;
end
3'b110://报警解除状态，中间8个灯亮，全0
begin
LED_state[15:0] <= 16'b0000_1111_1111_0000;
LED_state[31:16] <= 16'b0000_1111_1111_0000;
LED_state[47:32] <= 16'b0000_1111_1111_0000;
LED_state[63:48] <= 16'b0000_1111_1111_0000;
LED_state[79:64] <= 16'b0000_1111_1111_0000;
LED_state[95:80] <= 16'b0000_1111_1111_0000;
LED_state[111:96] <= 16'b0000_1111_1111_0000;
LED_state[127:112] <= 16'b0000_1111_1111_0000;
LED_state[143:128] <= 16'b0000_1111_1111_0000;
LED_state[159:144] <= 16'b0000_1111_1111_0000;
LED_state[175:160] <= 16'b0000_1111_1111_0000;
LED_state[191:176] <= 16'b0000_1111_1111_0000;
LED_state[207:192] <= 16'b0000_1111_1111_0000;
LED_state[223:208] <= 16'b0000_1111_1111_0000;
LED_state[239:224] <= 16'b0000_1111_1111_0000;
LED_state[255:240] <= 16'b0000_1111_1111_0000;
end
3'b111://解锁状态，中间8个灯亮，数码管方框
begin
LED_state[15:0] <= 16'b0000_1111_1111_0000;
LED_state[31:16] <= 16'b1111_0000_0000_1111;
LED_state[47:32] <= 16'b0000_1111_1111_0000;
LED_state[63:48] <= 16'b1111_0000_0000_1111;
LED_state[79:64] <= 16'b0000_1111_1111_0000;
LED_state[95:80] <= 16'b1111_0000_0000_1111;
LED_state[111:96] <= 16'b0000_1111_1111_0000;
LED_state[127:112] <= 16'b1111_0000_0000_1111;
LED_state[143:128] <= 16'b0000_1111_1111_0000;
LED_state[159:144] <= 16'b1111_0000_0000_1111;
LED_state[175:160] <= 16'b0000_1111_1111_0000;
LED_state[191:176] <= 16'b1111_0000_0000_1111;
LED_state[207:192] <= 16'b0000_1111_1111_0000;
LED_state[223:208] <= 16'b1111_0000_0000_1111;
LED_state[239:224] <= 16'b0000_1111_1111_0000;
LED_state[255:240] <= 16'b1111_0000_0000_1111;
end

endcase

always @ (posedge clk)
begin
case(timer)
32'd25_000_00:LED <= LED_state[15:0];
32'd50_000_00:LED <= LED_state[31:16];
32'd75_000_00:LED <= LED_state[47:32];
32'd100_000_00:LED <= LED_state[63:48];
32'd125_000_00:LED <= LED_state[79:64];
32'd150_000_00:LED <= LED_state[95:80];
32'd175_000_00:LED <= LED_state[111:96];
32'd200_000_00:LED <= LED_state[127:112];
32'd225_000_00:LED <= LED_state[143:128];
32'd250_000_00:LED <= LED_state[159:144];
32'd275_000_00:LED <= LED_state[175:160];
32'd300_000_00:LED <= LED_state[191:176];
32'd325_000_00:LED <= LED_state[207:192];
32'd350_000_00:LED <= LED_state[223:208];
32'd375_000_00:LED <= LED_state[239:224];
32'd400_000_00:LED <= LED_state[255:240];
endcase
end

endmodule


